# Node: this should work on an out of the box minikube setup 
apiVersion: v1
kind: Service
metadata:
  name: redis-server
  labels:
    app: redis-server
    tier: backend
spec:
  type: ClusterIP
  ports:
  - port: 6379
  selector:
    app: redis-server
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: yelb-appserver
  labels:
    app: yelb-appserver
    tier: middletier
spec:
  type: ClusterIP
  ports:
  - port: 4567
  selector:
    app: yelb-appserver
    tier: middletier
---
apiVersion: v1
kind: Service
metadata:
  name: yelb-ui
  labels:
    app: yelb-ui
    tier: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: yelb-ui
    tier: frontend
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: yelb-ui-ingress
spec:
  rules:
    - host: yelb.mydomain.com
      http:
        paths:
          - path: /
            backend: 
              serviceName: yelb-ui
              servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: yelb-ui
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: yelb-ui
        tier: frontend
    spec:
      containers:
      - name: yelb-ui
        image: mreferre/yelb-ui
        ports:
        - containerPort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis-server
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-server
        tier: backend
    spec:
      containers:
      - name: redis-server
        image: redis
        ports:
        - containerPort: 6379
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: yelb-appserver
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: yelb-appserver
        tier: middletier
    spec:
      containers:
      - name: yelb-appserver
        image: mreferre/yelb-appserver
        ports:
        - containerPort: 4567








