version: '2'
volumes:
  etcjobservice:
    #external: true #uncomment if you prefer to create the volumes manually
    driver: rancher-nfs
  etcnginx:
    #external: true #uncomment if you prefer to create the volumes manually
    driver: rancher-nfs
  etcregistry:
    #external: true #uncomment if you prefer to create the volumes manually
    driver: rancher-nfs
  etcui:
    #external: true #uncomment if you prefer to create the volumes manually
    driver: rancher-nfs
  configjobservice:
    #external: true #uncomment if you prefer to create the volumes manually
    driver: rancher-nfs
  configdb:
    #external: true #uncomment if you prefer to create the volumes manually
    driver: rancher-nfs
  configui:
    #external: true #uncomment if you prefer to create the volumes manually
    driver: rancher-nfs
services:
  harbor-setupwrapper:
    image: mreferre/harbor-setupwrapper:0.5.0
    container_name: harbor-setupwrapper
    environment:
      - HARBORHOSTNAME=${harborhostname}${traefikdomain}
      - HARBOR_ADMIN_PASSWORD=${harbor_admin_password}
    volumes:
      - etcui:/etc/ui
      - etcjobservice:/etc/jobservice
      - etcregistry:/etc/registry
      - etcnginx:/etc/nginx
      - configdb:/configdb
      - configui:/configui
      - configjobservice:/configjobservice
    volume_driver: rancher-nfs
    command: ["/harbor/harbor-setupwrapper.sh"]
    network_mode: "none"
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.container.start_once: 'true'
  log:
    image: vmware/harbor-log:0.5.0
    container_name: harbor-log
    restart: always
    volumes:
      - /var/log/harbor/:/var/log/docker/
    ports:
      - 1514:514
    labels:
      io.rancher.scheduler.global: 'true'
      io.rancher.scheduler.affinity:host_label: harbor-log=true
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.container.hostname_override: container_name
  registry:
    image: library/registry:2.5.0
    container_name: registry
    restart: always
    volumes:
      - /data/registry:/storage
      - etcui:/etc/ui
      - etcjobservice:/etc/jobservice
      - etcregistry:/etc/registry
      - etcnginx:/etc/nginx
      - configdb:/configdb
      - configui:/configui
      - configjobservice:/configjobservice
    volume_driver: rancher-nfs
    environment:
      - GODEBUG=netdns=cgo
    command:
      ["serve", "/etc/registry/config.yml"]
    depends_on:
      - log
      - harbor-setupwrapper
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://127.0.0.1:1514"
        tag: "registry"
    labels:
      io.rancher.container.hostname_override: container_name
      #io.rancher.sidekicks: harbor-setupwrapper
  mysql:
    image: vmware/harbor-db:0.5.0
    container_name: harbor-db
    restart: always
    volumes:
      - /data/database:/var/lib/mysql
      - etcui:/etc/ui
      - etcjobservice:/etc/jobservice
      - etcregistry:/etc/registry
      - etcnginx:/etc/nginx
      - configdb:/configdb
      - configui:/configui
      - configjobservice:/configjobservice
    volume_driver: rancher-nfs
    depends_on:
      - log
      - harbor-setupwrapper
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://127.0.0.1:1514"
        tag: "mysql"
    entrypoint:
      - /bin/sh
      - -c
    command:
      - /configdb/entrypointdb.sh
    labels:
      io.rancher.container.hostname_override: container_name
      #io.rancher.sidekicks: harbor-setupwrapper
  ui:
    image: vmware/harbor-ui:0.5.0
    container_name: harbor-ui
    restart: always
    volumes:
      - /data:/harbor_storage
      - etcui:/etc/ui
      - etcjobservice:/etc/jobservice
      - etcregistry:/etc/registry
      - etcnginx:/etc/nginx
      - configdb:/configdb
      - configui:/configui
      - configjobservice:/configjobservice
    volume_driver: rancher-nfs
    depends_on:
      - log
      - harbor-setupwrapper
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://127.0.0.1:1514"
        tag: "ui"
    entrypoint:
      - /bin/sh
      - -c
    command:
      - /configui/entrypointui.sh
    external_links:
      - registry
      - mysql
    labels:
      io.rancher.container.hostname_override: container_name
      #io.rancher.sidekicks: harbor-setupwrapper
  jobservice:
    image: vmware/harbor-jobservice:0.5.0
    container_name: harbor-jobservice
    restart: always
    volumes:
      - /data/job_logs:/var/log/jobs
      - etcui:/etc/ui
      - etcjobservice:/etc/jobservice
      - etcregistry:/etc/registry
      - etcnginx:/etc/nginx
      - configdb:/configdb
      - configui:/configui
      - configjobservice:/configjobservice
    volume_driver: rancher-nfs
    depends_on:
      - log
      - harbor-setupwrapper
    external_links:
      - registry:registry
      - ui:ui
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://127.0.0.1:1514"
        tag: "jobservice"
    entrypoint:
      - /bin/sh
      - -c
    command:
      - /configjobservice/entrypointjobservice.sh
    external_links:
      - registry
      - ui
      - mysql
    labels:
      io.rancher.container.hostname_override: container_name
      #io.rancher.sidekicks: harbor-setupwrapper
  proxy:
    image: nginx:1.11.5
    container_name: nginx
    restart: always
    volumes:
      - etcui:/etc/ui
      - etcjobservice:/etc/jobservice
      - etcregistry:/etc/registry
      - etcnginx:/etc/nginx
      - configdb:/configdb
      - configui:/configui
      - configjobservice:/configjobservice
    volume_driver: rancher-nfs
    depends_on:
      - log
      - harbor-setupwrapper
    external_links:
      - registry
      - ui
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://127.0.0.1:1514"
        tag: "proxy"
    labels:
      io.rancher.container.hostname_override: container_name
      #io.rancher.sidekicks: harbor-setupwrapper
      traefik.alias: ${harborhostname}
      traefik.port: 80
      traefik.domain: ${traefikdomain}
      traefik.enable: stack
